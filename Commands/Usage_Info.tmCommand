<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE plist PUBLIC "-//Apple Computer//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
    <dict>
        <key>beforeRunningCommand</key>
        <string>nop</string>
        <key>command</key>
        <string>TEXT=$(cat)

if [ -z "$TM_SELECTED_TEXT" ]; then
	export WORD=$(ruby -- &lt;&lt;-SCR1 
		require File.join(ENV["TM_SUPPORT_PATH"], "lib/current_word.rb")
		word = Word.current_word('\w\.')
		word.gsub!(/^[\d\.\-]+$/,"")
		print word
	SCR1
	)

	if [ -z "$WORD" ]; then
		#look for nested commands
		export WORD=$(perl -e '
		$line=$ENV{"TM_CURRENT_LINE"};$col=$ENV{"TM_LINE_INDEX"};
		$line=substr($line,0,$col);
		$line=~s/ //g;
		@arr=split(//,$line);$c=0;
		for($i=$#arr;$i&gt;-1;$i--){$c-- if($arr[$i] eq ")");$c++ if($arr[$i] eq "(");last if $c&gt;0;}
		if($i==-1) {
			print "";
		} else {
			substr($line,0,$i)=~m/([\w\.]+)$/;
			print $1 if defined($1);
		}
		')
	fi
else
	#take the selected text
	export WORD=$(echo -en "$TM_SELECTED_TEXT" | perl -e '$_=&lt;&gt;;chomp;s/^[\t ]*//;s/([\w\.]+)[ \(\{].*/$1/g;print')
fi

#check whether WORD is defined otherwise quit
[[ -z "$WORD" ]] &amp;&amp; echo "No keyword found" &amp;&amp; exit_show_tool_tip


[[ ! -f "$TM_BUNDLE_SUPPORT"/generated/help.index ]] &amp;&amp; exit_show_tool_tip "help index missing, click 'Build Help Index' to generate it"

#get the reference for WORD
FILE=$(grep "^${WORD//./\\.}	" "$TM_BUNDLE_SUPPORT"/generated/help.index | awk '{print $2;}')

#get the library in which WORD is defined
LIB=$(echo -en \"$FILE\" | perl -pe 's!.*/library/(.*?)/latex.*!$1!')

#check whether something is found within the installed packages or within the current doc otherwise quit
if [ -z "$FILE" ]; then #look for local defined functions
	OUT=$(echo -en "$TEXT" | egrep -A 10 "${WORD//./\\.} *&lt;\- *function *\(" | perl -e 'undef($/);$a=&lt;&gt;;$a=~s/.*?&lt;\- *function *(\(.*?\)) *[\t\n\{\w].*/$1/s;$a=~s/\t//sg;$a=~s/\n/ /g;print "$a" if($a=~m/^\(/ &amp;&amp; $a=~m/\)$/s)' | fmt | perl -e 'undef($/);$a=&lt;&gt;;$a=~s/\n/\n\t/g;$a=~s/\n\t$//;print $a')
	LIB="local"

	[[ -z "$OUT" ]] &amp;&amp; echo "Nothing found" &amp;&amp; exit_show_tool_tip

	OUT=$WORD$OUT
else #get the usage from the latex file
	OUT=$(cat "$FILE" | perl -e '
		undef($/);$w=$ENV{"WORD"};$a=&lt;&gt;;
		$a=~m/\\begin\{Usage\}\n\\begin\{verbatim\}\r?\n?.*?($w *\(.*?\))\r?\n.*?\\end\{verbatim\}/s;
		if(length($1)) {
			print $1;
		} else {
			$a=~m/\\begin\{Usage\}\r?\n\\begin\{verbatim\}\r?\n?.*?($w *\(.*?\)).*?\\end\{verbatim\}/s;
			print "$1";
		}
	')
fi

#if no usage is found show the HTML page for WORD otherwise output the command usage
if [ -z "$OUT" ]; then
	FILE=$(echo -en "$FILE" | sed 's/latex/html/;s/\.tex//')
	cat "$FILE".html
	echo "&lt;base href='tm-file://$FILE'&gt;"
	exit_show_html
else
	echo -n "$OUT"
fi

#output the library in which WORD is defined
echo -en "\n•• library: $LIB ••"
echo -e "\n$RDTEXT"</string>
        <key>input</key>
        <string>document</string>
        <key>keyEquivalent</key>
        <string>^I</string>
        <key>name</key>
        <string>Declaration Tooltip</string>
        <key>output</key>
        <string>showAsTooltip</string>
        <key>scope</key>
        <string>source.r, source.rd</string>
        <key>uuid</key>
        <string>63F4CD9A-F17D-4FEF-A7E7-A12164D83B08</string>
    </dict>
</plist>
